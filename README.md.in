# Tools

[$ make-readme notify-on-exit]

[$ make-readme notify-when-done]

[$ make-readme coordinate]

[$ make-readme arduino]

# YouTube processing pipeline

This is a suite of programs to download YouTube Watch Later queue, and limit
the user in watching too much content.

[$ make-readme yt-remove-watchlater]

[$ make-readme yt-download-watch-later]

[$ make-readme video-feed]

[$ make-readme video-lengths]

# Eternalize

Assuming:

- that you have a workstation and a backup NAS with SSH access;
- that you backup (through rsync) workstation contents to this server;

the eternalize tool will help you to permanently store the files on the server,
by moving them from the backup directory to some other specified destination,
(e.g. Movies, Documents, Pictures), and then, removing them from the workstation.

[$ make-readme eternalize]

[$ make-readme eternalize-locate]

[$ make-readme eternalize-resolve-conflict]

# Archive tool

This is a suite of programs to pack up finished projects (with databases and such),
and upload them to a specified location on a remote server.

The unarchive command reverses this process.

[$ make-readme archive]

[$ make-readme archive-pack-wordpress]

[$ make-readme archive-pack-bedrock]

[$ make-readme archive-pack-generic]

[$ make-readme archive-mysql]

[$ make-readme archive-teardown-mysql]

[$ make-readme archive-pgsql]

[$ make-readme archive-check]

[$ make-readme archive-compress]

[$ make-readme archive-store-ssh]

# Services and daemons

[$ make-readme coordinate-arduino]

# Development

```
python3 -m venv env
. env/bin/activate
pip install -e .
```

For ease of development, automated README generation is provided.

[$ make-readme make-readme]

[$ make-readme markdown-command]

You can use it like this:

```
markdown_command README.md.in > README.md
```
